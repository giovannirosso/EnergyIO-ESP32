/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_LIB_PROTOMESSAGE_MESSAGE_PB_H_INCLUDED
#define PB_LIB_PROTOMESSAGE_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _DataType
{
    DataType_data0 = 0,
    DataType_data1 = 1,
    DataType_data2 = 2,
    DataType_data3 = 3
} DataType;

/* Struct definitions */
typedef struct _userData
{
    uint32_t user;
    DataType type;
    char data[128];
} userData;

/* Helper constants for enums */
#define _DataType_MIN DataType_data0
#define _DataType_MAX DataType_data3
#define _DataType_ARRAYSIZE ((DataType)(DataType_data3 + 1))

#ifdef __cplusplus
extern "C"
{
#endif

/* Initializer values for message structs */
#define userData_init_default \
    {                         \
        0, _DataType_MIN, ""  \
    }
#define userData_init_zero   \
    {                        \
        0, _DataType_MIN, "" \
    }

/* Field tags (for use in manual encoding/decoding) */
#define userData_user_tag 1
#define userData_type_tag 2
#define userData_data_tag 3

/* Struct field encoding specification for nanopb */
#define userData_FIELDLIST(X, a)            \
    X(a, STATIC, SINGULAR, UINT32, user, 1) \
    X(a, STATIC, SINGULAR, UENUM, type, 2)  \
    X(a, STATIC, SINGULAR, STRING, data, 3)
#define userData_CALLBACK NULL
#define userData_DEFAULT NULL

    extern const pb_msgdesc_t userData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define userData_fields &userData_msg

/* Maximum encoded size of messages (where known) */
#define userData_size 138

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
